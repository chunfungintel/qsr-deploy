apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qsrbe-pv-claim
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: qsrbe
  name: qsrbe-service
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
    nodePort: 30050
  selector:
    app: qsrbe
  #type: ClusterIP
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: qsr
  name: qsrui-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
    nodePort: 30080
  selector:
    app: qsr
  #type: ClusterIP
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qsr
  labels:
    app: qsr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qsr
  template:
    metadata:
      labels:
        app: qsr
    spec:
      containers:
      - name: qsr-ui
        image: {{ .Values.qsr_images.qsr_ui | quote }}
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: {{ .Values.proxy.name }}
        - configMapRef:
            name: {{ .Values.qsr_config.name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qsrbe
  labels:
    app: qsrbe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qsrbe
  template:
    metadata:
      labels:
        app: qsrbe
    spec:
      initContainers:
      #During this Pod's initialization, check that myconfig service is up and running before starting this pod
      - name: asr-ready
        image: busybox:latest
        command: ['sh', '-c',
          'until nc -vz mysql.{{ .Release.Namespace }}.svc.cluster.local 3306; do echo "Waiting for mysql service"; sleep 2; done;']
      containers:
      - name: qsr-be
        image: {{ .Values.qsr_images.qsr_be | quote }}
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: {{ .Values.proxy.name }}
        - configMapRef:
            name: {{ .Values.qsr_config.name }}
        volumeMounts:
        - name: qsrbe-persistent-storage
          mountPath: /backend/assets/images
      volumes:
      - name: qsrbe-persistent-storage
        persistentVolumeClaim:
          claimName: qsrbe-pv-claim
